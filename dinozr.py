import time
import pyautogui
import mss
import numpy as np
import cv2

# –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ–±–ª–∞—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞ –¥–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π (–Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å)
BBOX = (300, 410, 450, 460)  # x1, y1, x2, y2
JUMP_KEY = "space"
DUCK_KEY = "down"
CHECK_DELAY = 0.05  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏

screenshot = pyautogui.screenshot(region=(300, 410, 150, 50))  # –ê–Ω–∞–ª–æ–≥ BBOX
screenshot.save("debug_screenshot.png")
print("–°–∫—Ä–∏–Ω—à–æ—Ç –æ–±–ª–∞—Å—Ç–∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –∫–∞–∫ bbox_screenshot.png")
                                   
def get_obstacle_info():
    with mss.mss() as sct:
        screenshot = np.array(sct.grab(BBOX))[:, :, 0]  # –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∫–∞–Ω–∞–ª (—á–µ—Ä–Ω–æ-–±–µ–ª—ã–π)
        print(f"Min pixel value: {np.min(screenshot)}")  # –í—ã–≤–æ–¥–∏—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∏–∫—Å–µ–ª–µ–π
        if np.any(screenshot < 100):  # –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–º–Ω—ã–π –æ–±—ä–µ–∫—Ç (–∫–∞–∫—Ç—É—Å –∏–ª–∏ –ø—Ç–∏—Ü–∞)
            return "obstacle"
    return None

def press_key(key, duration=0.1):
    pyautogui.keyDown(key)         
    time.sleep(duration)
    pyautogui.keyUp(key)

def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ù–∞—á–Ω–∏ –∏–≥—Ä—É (–Ω–∞–∂–º–∏ –ø—Ä–æ–±–µ–ª) –∏ –Ω–µ —Ç—Ä–æ–≥–∞–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.")
    time.sleep(2)  # –û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º

    last_action = None

    try:
        while True:
            obstacle = get_obstacle_info()

            if obstacle and last_action != "jump":
                press_key(JUMP_KEY)
                print("‚¨Ü –ü—Ä—ã–∂–æ–∫!")
                last_action = "jump"
            else:
                last_action = None

            time.sleep(CHECK_DELAY)

    except KeyboardInterrupt:
        print("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

if __name__ == "__main__":
    main()
               